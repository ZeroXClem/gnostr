#!/usr/bin/env python3
import sys

def get_arg(index):
    try:
        sys.argv[index]
    except IndexError:
        return ''
    else:
        return sys.argv[index]

# define a function to check if a number is a palindrome
def gnostr_hexidrome(n):
    # convert the number to a string
    s = str(n)
    # check if the string is the same forwards and backwards
    return s == s[::-1]

def loop(lb, ub):

    # define the start and end of the range
    start = int(lb)
    end = int(ub)

    # create an empty list to store the palindromes
    palindromes = []

    # loop through the range of numbers
    for n in range(start, end+1):
        # if the number is a palindrome, add it to the list
        if gnostr_hexidrome(n):
            palindromes.append(n)

    # print the list of palindromes
    if len(palindromes) > 0:
        ## print(palindromes)
        ## print('[{}]'.format(', '.join(str(x)[2:] for x in palindromes)))
        ## print('[{}]'.format(', '.join(str(x) for x in palindromes)))
        ## print('[{}]'.format(' '.join(str(x) for x in palindromes)))
        ## print('{}'.format(' '.join(str(x) for x in palindromes)))
        ## print('{}'.format(''.join(str(x) for x in palindromes)))
        ## print(palindromes)

        hexlist = list(map(hex, palindromes));
        if len(hexlist) > 0:
            ## print(hexlist)
            ## print('[{}]'.format(', '.join(str(x)[2:] for x in hexlist)))
            ## print('[{}]'.format(''.join(str(x)[2:] for x in hexlist)))
            print('{}'.format(''.join(str(x)[2:] for x in hexlist)))






if (args_count := len(sys.argv)) == 3:

    if int(get_arg(1)) > int(get_arg(2)):
        ## print("int(get_arg(1)) > int(get_arg(2))");
        lower_bound = int(get_arg(2));
        upper_bound = int(get_arg(1));
        loop(lower_bound, upper_bound)

    if int(get_arg(1)) < int(get_arg(2)) or int(get_arg(1)) == int(get_arg(2)):
        ## print("int(get_arg(1)) < int(get_arg(2))");
        lower_bound = int(get_arg(1));
        upper_bound = int(get_arg(2));
        loop(lower_bound, upper_bound)

elif (args_count := len(sys.argv)) == 2:

    if int(get_arg(1)) > int(get_arg(2)):
        print("int(get_arg(1)) > int(get_arg(2))");
        lower_bound = int(0);
        upper_bound = int(get_arg(2));
        loop(lower_bound, upper_bound)

    if int(get_arg(1)) < int(get_arg(2)):
        print("int(get_arg(1)) < int(get_arg(2))");
        lower_bound = int(0);
        upper_bound = int(get_arg(1));
        loop(lower_bound, upper_bound)

elif (args_count := len(sys.argv)) > 2:
    print("Usage:")
    print("gnostr-hexidrome <int>")
    print("gnostr-hexidrome <int> <int>")
    raise SystemExit(0)

elif (args_count := len(sys.argv)) < 2:

    print("Usage:")
    print("gnostr-hexidrome <int>")
    print("gnostr-hexidrome <int> <int>")
    raise SystemExit(0)
